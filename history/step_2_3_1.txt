user: 
Based on the information about the fields provided, along with any uploaded files and your existing knowledge, provide detailed information about these fields. 
The response should be in a compressed JSON format as illustrated below:
```json
[
  {
    'name': 'The name of the field',
    'has_sub_field': 'Indicates whether this field has a sub-field of another (true/false), if it is true, add "sub-fields" key',
    'data_type': 'The basic data type of the field (e.g., \"signed integer\", \"unsigned integer\", \"float\", \"bool\", \"string\", etc.).',
    'value_type': 'The nature of the field's value (e.g., \"static value\", \"range value\", \"finite optional value\", \"random value\", \"special (generated from specific algorithms or checksum procedure)\", etc.).',
    'values': 'Depending on value_type, this could be a range (e.g., \"0-65535\"), a list (e.g., \"[0, 1, 2]\" or \"[true, false]\"), a specific value, an algorithm name for \"special\", or \"null\" for payload/data fields, etc.',
    'semantic': 'A brief description of what the field represents or is used for.'
  }
  // additional fields or sub-fields information...
]
```
Reply to me short and clear with json! 

 fields information:
[{'format_name': 'Version 3 Membership Report', 'fields': [{'name': 'Type', 'position': '0', 'length': '8', 'unit': 'bits'}, {'name': 'Reserved', 'position': '8', 'length': '8', 'unit': 'bits'}, {'name': 'Checksum', 'position': '16', 'length': '16', 'unit': 'bits'}, {'name': 'Reserved', 'position': '32', 'length': '16', 'unit': 'bits'}, {'name': 'Number of Group Records (M)', 'position': '48', 'length': '16', 'unit': 'bits'}, {'name': 'Group Record', 'position': '64', 'length': 'variable', 'unit': 'bits', 'sub_fields': [{'name': 'Record Type', 'position': '0', 'length': '8', 'unit': 'bits'}, {'name': 'Aux Data Len', 'position': '8', 'length': '8', 'unit': 'bits'}, {'name': 'Number of Sources (N)', 'position': '16', 'length': '16', 'unit': 'bits'}, {'name': 'Multicast Address', 'position': '32', 'length': '32', 'unit': 'bits'}, {'name': 'Source Address [i]', 'position': '64', 'length': '32', 'unit': 'bits', 'repeated_field': True}, {'name': 'Auxiliary Data', 'position': 'variable', 'length': 'variable', 'unit': 'bits'}]}]}]

assistant: ```json
[
  {
    "name": "Type",
    "has_sub_field": "false",
    "data_type": "unsigned integer",
    "value_type": "finite optional value",
    "values": "[0x22]",
    "semantic": "Identifies the message as a Version 3 Membership Report in IGMP."
  },
  {
    "name": "Reserved",
    "has_sub_field": "false",
    "data_type": "unsigned integer",
    "value_type": "static value",
    "values": "0",
    "semantic": "Reserved bits, must be set to zero."
  },
  {
    "name": "Checksum",
    "has_sub_field": "false",
    "data_type": "unsigned integer",
    "value_type": "special",
    "values": "checksum algorithm",
    "semantic": "Used for error-checking of the IGMP message."
  },
  {
    "name": "Reserved",
    "has_sub_field": "false",
    "data_type": "unsigned integer",
    "value_type": "static value",
    "values": "0",
    "semantic": "Reserved field, must be zeroed."
  },
  {
    "name": "Number of Group Records (M)",
    "has_sub_field": "false",
    "data_type": "unsigned integer",
    "value_type": "range value",
    "values": "0-65535",
    "semantic": "Specifies the number of group records in this IGMP message."
  },
  {
    "name": "Group Record",
    "has_sub_field": "true",
    "sub_fields": [
      {
        "name": "Record Type",
        "has_sub_field": "false",
        "data_type": "unsigned integer",
        "value_type": "finite optional value",
        "values": "[1, 2, 3, 4, 5]",
        "semantic": "Defines the type of record, such as mode change, new sources, etc."
      },
      {
        "name": "Aux Data Len",
        "has_sub_field": "false",
        "data_type": "unsigned integer",
        "value_type": "range value",
        "values": "0-255",
        "semantic": "Length of the Auxiliary Data field in units of 32-bit words."
      },
      {
        "name": "Number of Sources (N)",
        "has_sub_field": "false",
        "data_type": "unsigned integer",
        "value_type": "range value",
        "values": "0-65535",
        "semantic": "Number of source addresses present in this record."
      },
      {
        "name": "Multicast Address",
        "has_sub_field": "false",
        "data_type": "binary address",
        "value_type": "specific value",
        "values": "IP address",
        "semantic": "The IP multicast address to which this record pertains."
      },
      {
        "name": "Source Address [i]",
        "has_sub_field": "false",
        "data_type": "binary address",
        "value_type": "specific value",
        "values": "IP address",
        "semantic": "List of source addresses (can be multiple) that this record reports."
      },
      {
        "name": "Auxiliary Data",
        "has_sub_field": "false",
        "data_type": "unsigned integer",
        "value_type": "optional",
        "values": "variable",
        "semantic": "Optional additional data, variable in length."
      }
    ],
    "data_type": "collection",
    "value_type": "variable structure",
    "values": "variable",
    "semantic": "Detailed information about host group records, can contain multiple subrecords."
  }
]
```

